# -*- coding: utf-8 -*-
"""One More Source For Cbe_kovaicare.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MITNm0miIbed3ted5ybt_EG0rs7a1yFL
"""

import json
import pandas as pd
import numpy as np
import requests
from bs4 import BeautifulSoup
from time import sleep

# %%
# post API url:
post_api_url = 'http://127.0.0.1:5000/updateBulk'

HospitalName=[]
TotalBeds=[]
VacantBeds=[]
OccupiedBeds=[]
MoreDetailsLink=[]
GeneralBeds=[]
OxygenBeds=[]
VentilatorBeds=[]
last_updated=[]
last=[]
G_name=[]
G_Tbed=[]
G_Obed=[]
G_Xbed=[]
O_name=[]
O_Tbed=[]
O_Obed=[]
O_Xbed=[]
V_name=[]
V_Tbed=[]
V_Obed=[]
V_Xbed=[]
Sheetname=[]
address=[]

url="http://kovaicare-ccmc.com/"
r=requests.get(url)
page=r.content
soup=BeautifulSoup(page,'html.parser')
line=soup.find_all('td')
count=0
for low in line:
  # print(low.text)
  up=low.text.split("\n\n")
  # print(up)
  # print(len(up))
  if len(up)==1:
    if(len(str(up)))==23:
      if (str(up))!="['Ventilator/ICU Beds']":
        if(count==38):
          last_updated.append("0")
          last_updated.append(up)
          count+=1
        else:
          last_updated.append(up)
          count+=1


row=soup.find_all('td',{'style':"color:black;"})
# ## print(row)

for hospi in row:
  hospital=hospi.text.split("\r\n")
  # print(hospital)
  HospitalName.append(hospital[1])
  adr=hospi.text.split(",")
  ad=hospi.text.split("-")
  if(len(ad)==2):
    address.append(ad[1]+", Coimbatore, Tamil Nadu, India")
    Sheetname.append(ad[1])
    # print(ad[1])
  elif(len(adr)==2):
    address.append(adr[1]+", Coimbatore, Tamil Nadu, India")
    Sheetname.append(adr[1])
  else:
    address.append("Coimbatore, Tamil Nadu, India")
    Sheetname.append("Coimbatore")
# ### print(HospitalName)

bar=soup.find_all('div',{'class':"progress-bar bg-success"})
# # print(bar)
for vac in bar:
  vacant=vac.text.split('\r\n')
  # print(vacant)
  VacantBeds.append(vacant[1])
#   # print(VacantBeds)

bar_o=soup.find_all('div',{'class':"progress-bar bg-warning"})
# # print(bar_o)
for occu in bar_o:
  occupied=occu.text.split('\r\n')
  OccupiedBeds.append(occupied[1])
##   print(OccupiedBeds)

ref=soup.find_all('td')
# print(ref)
for href in ref:
  l=href.find('a')
  if l is not None:
    link=url+l['href']
    MoreDetailsLink.append(link)
    # # print(link)
    r=requests.get(link)
    p_content=r.content
    bs=BeautifulSoup(p_content,'html.parser')
    colume=bs.find_all('div',{'class':"card bg-c-blue order-card"})
    for i in colume:
      col=i.find('span').text
      TotalBeds.append(col)
      # print(col)
    gen=bs.find_all("div",{"class":"card statustic-card"})
    general=[]
    temp=[]
  
    count=0
    for j in gen:
      # print(j.text)
      prim=j.text.split("\n\n")
      # prime=prim[1].split("\n\n")
      # print(prime)
      count+=1
      lprime=prim[1].split("\n")
      if (count==1):
        G_name.append(lprime[0])
        G_Tbed.append(lprime[2])
        G_Obed.append(lprime[3])
        G_Xbed.append(lprime[4].split()[3])
      elif (count==2):
        O_name.append(lprime[0])
        O_Tbed.append(lprime[2])
        O_Obed.append(lprime[3])
        O_Xbed.append(lprime[4].split()[2])
      else:
        V_name.append(lprime[0])
        V_Tbed.append(lprime[2])
        V_Obed.append(lprime[3])
        V_Xbed.append(lprime[4].split()[3])

print(len(HospitalName), 
      len(TotalBeds),
      len(OccupiedBeds),
      len(VacantBeds),
      len(MoreDetailsLink),
      len(last_updated),
      len(G_name),
      len(G_Tbed),
      len(G_Obed),
      len(G_Xbed),
      len(O_name),
      len(O_Tbed),
      len(O_Obed),
      len(O_Xbed),
      len(V_name),
      len(V_Tbed),
      len(V_Obed),
      len(V_Xbed))

kovaicare=pd.DataFrame({"Name":HospitalName,
                        "No. of Vacant Beds":VacantBeds,
                        "COVID Beds":G_Xbed,
                        "Oxygen Beds":O_Xbed,
                        "Ventilator Beds":V_Xbed,
                        "Link For Details":MoreDetailsLink,
                        "LAST UPDATED":last_updated,
                        # "ContactInformation":contactInfo,
                        "Address": address,
                        "Check LAST UPDATED":False,
                        "Sheet Name":"Coimbatore Beds",})

kovaicare

# kovaicare.to_excel('kovaicare_cowinmap.xlsx')

APIInput = kovaicare.to_json(orient='records', indent=2)
print(APIInput)
try:
  api_response = requests.post(
        post_api_url, json=json.loads(APIInput), verify=False)
  print(api_response.text)
  if api_response.status_code != 200:
    raise Exception(f"bulkupdate failed: {api_response.text}")
except Exception as err:
  print(err)
finally:
  print("Exiting program!")
